#! /usr/bin/env python
# -*- mode: python; coding: utf-8 -*-
# Copyright 2014, 2017 Peter Williams
# Licensed under the MIT License.

"""Prints out whether words might be in the dictionary or not."""

from __future__ import absolute_import, division, print_function

import sys, gzip
try:
    from cPickle import load as pickle_load
except ImportError:
    import pickle
    pickle_load = lambda f: pickle.load(f, encoding='bytes')

import bloom

# Poor man's argument handling
skipMisses = '-s' in sys.argv
if skipMisses:
    sys.argv.remove('-s')

wordstocheck = sys.argv[1:]

# Load up our special data structure. pickle loads up a preexisting
# BloomFilter object from disk and returns it to us. The class is
# implemented in bloom.py.
gz = gzip.GzipFile('dictbf.dat.gz', 'rb', 9)
bf = pickle_load(gz)

# Compute the false-positive rate of the filter.
# FIXME: do something useful with this number?
fp = bf.fprate()

for word in wordstocheck:
    if bf.maycontain(word):
        print(word, 'MIGHT BE in the dictionary')
    elif not skipMisses:
        print(word, 'is DEFINITELY NOT in the dictionary')
